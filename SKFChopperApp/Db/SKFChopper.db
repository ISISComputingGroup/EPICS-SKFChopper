
record(longin, "$(P)YEAR") {
    field(DESC, "Year in Chopper Memory")
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(TIME_L),0)UINT16")
    field(SCAN, "I/O Intr")
    field(EGU, "")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:YEAR")
    field(SDIS, "$(P)DISABLE")
}   

record(longin, "$(P)MONTH") {
    field(DESC, "Month in Chopper Memory")
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(TIME_L),1)UINT16")
    field(SCAN, "I/O Intr")
    field(EGU, "")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:MONTH")
    field(SDIS, "$(P)DISABLE")
}   

record(mbbi, "$(P)STATE") {
    field(DESC, "System State")
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(STATE_L),0)UINT16")
    field(SCAN, "I/O Intr")
    field(SIML, "$(P)SIM")
    field(SIOL, 0)
	field(ZRVL, 0)
	field(ONVL, 1)
	field(TWVL, 2)
	field(THVL, 3)
	field(FRVL, 4)
	field(FVVL, 5)
	field(SXVL, 6)
	field(SVVL, 7)
	field(EIVL, 8)
	field(NIVL, 9)
	field(TEVL, 10)
	field(ELVL, 11)
	field(ZRST, "Invalid")
	field(ONST, "Power Up")
	field(TWST, "Standby")
	field(THST, "Idle")
	field(FRST, "Deleving")
	field(FVST, "Levitating")
	field(SXST, "Starting")
	field(SVST, "Stopping")
	field(EIST, "Coast")
	field(NIST, "Rotation")
	field(TEST, "Levitated")
	field(ELST, "Rotating")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

record(longin, "$(P)DAY") {
    field(DESC, "Day in Chopper Memory")
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(TIME_L),2)UINT16")
    field(SCAN, "I/O Intr")
    field(EGU, "")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:DAY")
    field(SDIS, "$(P)DISABLE")
}   

record(longin, "$(P)TIME") {
    field(DESC, "Seconds since Midnight")
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(TIME_L),3)INT32_BE")
    field(SCAN, "I/O Intr")
    field(EGU, "s")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:TIME")
    field(SDIS, "$(P)DISABLE")
}   

record(ai, "$(P)HOMEANG") {
    field(DESC, "Parking Angle")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(homeang,0)FLOAT32_LE")
    field(SCAN, "I/O Intr")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:HOMEANG")
    field(SDIS, "$(P)DISABLE")
    field(EGU, "degree")
	field(PREC, 3)
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}   

record(ao, "$(P)HOMEANG:SP") {
    field(DESC, "Parking Angle Setpoint")
    field(DTYP, "asynFloat64")
    field(OUT, "@asyn(homeangw,0)FLOAT32_LE")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:HOMEANG")
    field(SDIS, "$(P)DISABLE")
    field(EGU, "degree")
	field(PREC, 3)
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
} 

record(bi, "$(P)DIR") {
    field(DESC, "Spin Direction")
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(DIR_L),0)INT16")
    field(SCAN, "I/O Intr")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:DIR")
    field(SDIS, "$(P)DISABLE")
	field(ZNAM, "A")
	field(ONAM, "B")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}   

# direction should not be changed
#record(bo, "$(P)DIR:SP") {
#    field(DESC, "Spin Direction Setpoint")
#    field(DTYP, "asynInt32")
#    field(OUT, "@asyn($(DIR_L)w,0)INT16")
#    field(SIML, "$(P)SIM")
#    field(SIOL, "$(P)SIM:DIR")
#    field(SDIS, "$(P)DISABLE")
#	field(ZNAM, "A")
#	field(ONAM, "B")
#    info(INTEREST, "HIGH")
#    info(archive, "VAL")
#} 

# actually in .1 Hz units
record(longin, "$(P)SPEED") {
    field(DESC, "Rotor Speed")
    field(DTYP, "asynInt32")
    field(INP, "@asyn(rspeed,0)UINT16")
    field(SCAN, "I/O Intr")
    field(EGU, "Hz")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:SPEED")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}   

record(ai, "$(P)FREQ") {
    field(DESC, "Chopper Frequency")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(FREQ_L),0)FLOAT32_LE")
    field(SCAN, "I/O Intr")
    field(EGU, "Hz")
    field(PREC, "3")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:FREQ")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}   

record(ao, "$(P)FREQ:SP") {
    field(DESC, "Chopper Frequency Setpoint")
    field(DTYP, "asynFloat64")
    field(OUT, "@asyn($(FREQ_L)w,0)FLOAT32_LE")
    field(EGU, "Hz")
    field(PREC, "3")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:FREQ")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}  

record(longin, "$(P)PHAS") {
    field(DESC, "Reference Delay")
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PHAS_L),0)INT32_LE")
    field(SCAN, "I/O Intr")
    field(EGU, "ns")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PHAS")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}   

record(longout, "$(P)PHAS:SP") {
    field(DESC, "Reference Dealy Setpoint")
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PHAS_L)w,0)INT32_LE")
    field(EGU, "ns")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PHAS")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}  

record(ai, "$(P)PHAS:DEG") {
    field(DESC, "Reference Delay")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(phasd,0)FLOAT32_LE")
    field(SCAN, "I/O Intr")
    field(EGU, "degree")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PHAS:DEG")
    field(SDIS, "$(P)DISABLE")
    field(PREC, "3")
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}   

record(longin, "$(P)PHAS_ERR") {
    field(DESC, "Veto Window")
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(PERR_L),0)INT32_LE")
    field(SCAN, "I/O Intr")
    field(EGU, "ns")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PHAS_ERR")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}  

record(longout, "$(P)PHAS_ERR:SP") {
    field(DESC, "Veto Window Setpoint")
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(PERR_L)w,0)INT32_LE")
    field(EGU, "ns")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PHAS_ERR")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}  

record(ai, "$(P)PHAS_ERR:DEG") {
    field(DESC, "Veto Window")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn(phaserrd,0)FLOAT32_LE")
    field(SCAN, "I/O Intr")
    field(EGU, "degree")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:PHAS_ERR:DEG")
    field(SDIS, "$(P)DISABLE")
    field(PREC, "3")
    info(INTEREST, "MEDIUM")
    info(archive, "VAL")
}  

record(longin, "$(P)VETO") {
    field(DESC, "Veto Counts")
    field(DTYP, "asynInt32")
    field(INP, "@asyn($(VETO_L),0)INT32_LE")
    field(SCAN, "I/O Intr")
    field(EGU, "count")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:VETO")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

record(ai, "$(P)READY") {
    field(DESC, "Phase OK")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(READY_L),0)FLOAT32_LE")
    field(SCAN, "I/O Intr")
    field(EGU, "%")
    field(PREC, "3")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:READY")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

record(ai, "$(P)INSYNC") {
    field(DESC, "Phase Accuracy")
    field(DTYP, "asynFloat64")
    field(INP, "@asyn($(INSYNC_L),0)FLOAT32_LE")
    field(SCAN, "I/O Intr")
    field(EGU, "s")
    field(PREC, "3")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:INSYNC")
    field(SDIS, "$(P)DISABLE")
    info(INTEREST, "HIGH")
    info(archive, "VAL")
}

record(bo, "$(P)START") {
    field(DESC, "Modbus Run On")
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(START_L),0)UINT16")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:START")
    field(SDIS, "$(P)DISABLE")
    field(ZNAM, "")
    field(ONAM, "START")
}   

record(bo, "$(P)STOP") {
    field(DESC, "Modbus run Off")
    field(DTYP, "asynInt32")
    field(OUT, "@asyn($(STOP_L),0)UINT16")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:STOP")
    field(SDIS, "$(P)DISABLE")
    field(ZNAM, "")
    field(ONAM, "STOP")
}

record(bo, "$(P)SIM")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(ZNAM, "NO")
    field(ONAM, "YES")
}

record(bo, "$(P)DISABLE") 
{
    field(DESC, "Disable comms")
    field(PINI, "YES")
    field(VAL, "0")
    field(OMSL, "supervisory")
    field(ZNAM, "COMMS ENABLED")
    field(ONAM, "COMMS DISABLED")
}

record(longin, "$(P)SIM:YEAR")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(VAL, "2015")
}

record(longin, "$(P)SIM:MONTH")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(VAL, "01")
}

record(longin, "$(P)SIM:DAY")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(VAL, "01")
}

record(longin, "$(P)SIM:TIME")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(bi, "$(P)SIM:DIR")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ai, "$(P)SIM:FREQ")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ai, "$(P)SIM:HOMEANG")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(longin, "$(P)SIM:SPEED")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(longin, "$(P)SIM:PHAS")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ai, "$(P)SIM:PHAS:DEG")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(longin, "$(P)SIM:PHAS_ERR")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ai, "$(P)SIM:PHAS_ERR:DEG")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(longin, "$(P)SIM:VETO")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ai, "$(P)SIM:READY")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ai, "$(P)SIM:INSYNC")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(bi, "$(P)SIM:START")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(bi, "$(P)SIM:STOP")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}
